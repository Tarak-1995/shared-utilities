# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml



parameters:
- name: helmversion
  displayName: helm Version
  type: string
  default: 


trigger:
- none

pool:
  vmImage: ubuntu-latest


variables:
  helmVersion: "3.2.3"
  HELM_EXPERIMENTAL_OCI: 1
  registryServerName: "$(registryName).azurecr.io"
  projectName: "sharedutilities"
  helmChartVersion: ${{ parameters.helmversion }}
  azure.service.connection: "Perseus-migration-AKS"




stages:
- stage: Migration
  displayName: Migration
  jobs:
  - deployment: Migration
    variables:
    - name: imageName
      value: $(registryServerName)/sharedutilities_mig:$(helmChartVersion)
      # define 5 more variables: aks, rg, aksSpId, aksSpSecret and aksSpTenantId in the Azure pipeline UI definition
    displayName: deploy helm chart into AKS
    pool:
      vmImage: ubuntu-latest
    environment: migration-$(projectName)
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - task: HelmInstaller@1
            displayName: "install helm"
            inputs:
              helmVersionToInstall: $(helmVersion)

          - bash: |
              az login \
                  --service-principal \
                  -u $(aksSpId) \
                  -p '$(aksSpSecret)' \
                  --tenant $(aksSpTenantId)
              az aks get-credentials \
                  -n $(aks) \
                  -g $(rg)
              echo $(registryPassword) | helm registry login $(registryServerName) --username $(registryLogin) --password-stdin
              #helmChartVersion=$(jq .helmChartVersion $(pipeline.workspace)/ci-pipeline/sharedutilities-qa/variables.json -r)
              helm chart pull $(registryServerName)/charts/$(projectName):$(helmChartVersion)
              helm chart export $(registryServerName)/charts/$(projectName):$(helmChartVersion) --destination $(pipeline.workspace)/install
            failOnStderr: false
            displayName: "pull helm chart"
            
          - task: qetza.replacetokens.replacetokens-task.replacetokens@3
            displayName: Replace tokens in **/*
            inputs:
              rootDirectory: $(Pipeline.Workspace)/install
              targetFiles: '**/*.yaml'
              keepToken: true
              tokenPrefix: __
              tokenSuffix: __

            
          - task: HelmDeploy@0
            displayName: deploy chart to aks
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Pre-Prod Migration Testing (66a0d2dc-a4f4-4e18-b2a2-30cf393ca8d2)'
              azureResourceGroup: 'Perseus-migration-RG'
              kubernetesCluster: 'Perseus-migration-eastus2-AKS'
              useClusterAdmin: true
              namespace: 'migration'
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(pipeline.workspace)/install/sharedutilities/'
              chartVersion: '$(helmChartVersion)'
              releaseName: 'sharedutilities-migration'
              valueFile: '$(pipeline.workspace)/install/sharedutilities/values.eastus2.migration.yaml'
              arguments: '--install'