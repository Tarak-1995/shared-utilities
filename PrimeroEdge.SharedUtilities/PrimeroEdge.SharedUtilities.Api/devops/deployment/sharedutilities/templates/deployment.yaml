apiVersion : apps/v1
kind: Deployment
metadata:
  name: sharedutilities
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: sharedutilities
  template:
    metadata:
      labels:
        app: sharedutilities
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
    spec: 
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pooltype
                operator: In
                values:
                - linux
      securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          fsGroup: 1001
      containers:
        - name: sharedutilities 
          image: __imageName__
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop:
               - ALL
          ports:
          - containerPort: 5000
          resources:
            limits:
              cpu: {{ .Values.limitcpu }}
              memory: {{ .Values.limitmemory }}
            requests:
              cpu: {{ .Values.requestscpu }}
              memory: {{ .Values.requestsmemory }}
          volumeMounts:
          - name: secrets
            mountPath: "/mnt/secrets"
          env:
          {{- if eq .Values.namespace "uat" }}
          {{- template "uat.env" . }}
          {{- else if eq .Values.namespace "demo" }}
          {{- template "demo.env" . }}
          {{- else if eq .Values.namespace "training" }}
          {{- template "training.env" . }}
          {{- else if eq .Values.namespace "migration" }}
          {{- template "migration.env" . }}
          {{- else if eq .Values.namespace "dm" }}
          {{- template "dm.env" . }}
          {{- else if eq .Values.namespace "staging" }}
          {{- template "stage.env" . }}
          {{- else if eq .Values.namespace "sales" }}
          {{- template "sales.env" . }}            
          {{- else if eq .Values.namespace "prod" }}
          {{- template "prod.env" . }}
          {{- else if eq .Values.namespace "qa" }}
          - name: "ASPNETCORE_ENVIRONMENT"
            value: {{ .Values.aspnetcore }}
          - name: "AppEnv"
            value: {{ .Values.namespace }}
          - name: "ServiceSettings__SourceSettings__ConnectionString"
            valueFrom:
              secretKeyRef:
                name: servicesettingssourcesettingsconnectionstring
                key: servicesettingssourcesettingsconnectionstring
          - name: "RedisClientConfiguration__ConnectionString"
            valueFrom:
              secretKeyRef:
                name: redisclientconfigurationconnectionstring
                key: redisclientconfigurationconnectionstring
          - name: "ConnectionStrings__ADMINISTRATION"
            valueFrom:
              secretKeyRef:
                name: connectionstringsadministration
                key: connectionstringsadministration
          - name: "LogSettings__LogProvider__LogConfiguration"
            valueFrom:
              secretKeyRef:
                name: logsettingslogproviderlogconfiguration
                key: logsettingslogproviderlogconfiguration
          - name: "CouchbaseSettings__Host"
            valueFrom:
              secretKeyRef:
                name: couchbasesettingshost 
                key: couchbasesettingshost
          - name: "CouchbaseSettings__UserName"
            valueFrom:
              secretKeyRef:
                name: couchbasesettingsusername
                key: couchbasesettingsusername
          - name: "CouchbaseSettings__Password"
            valueFrom:
              secretKeyRef:
                name: couchbasesettingspassword
                key: couchbasesettingspassword
          - name: "AuditCouchbaseSettings__Host"
            valueFrom:
              secretKeyRef:
                name: auditcouchbasesettingshost
                key: auditcouchbasesettingshost
          - name: "AuditCouchbaseSettings__UserName"
            valueFrom:
              secretKeyRef:
                name: auditcouchbasesettingsusername
                key: auditcouchbasesettingsusername
          - name: "AuditCouchbaseSettings__Password"
            valueFrom:
              secretKeyRef:
                name: auditcouchbasesettingspassword
                key: auditcouchbasesettingspassword
          #- name: "AzureBlobStorageCredential__Key"
          #  valueFrom:
          #    secretKeyRef:
          #      name: azureblobstoragecredentialkey
          #      key: azureblobstoragecredentialkey
          #- name: "AzureBlobStorageCredential__ConnectionString"
          #  valueFrom:
          #    secretKeyRef:
          #      name: azureblobstoragecredentialconnectionstring
          #      key: azureblobstoragecredentialconnectionstring 
          {{- else }}
          - name: "ASPNETCORE_ENVIRONMENT"
            value: {{ .Values.aspnetcore }}
          - name: "AppEnv"
            value: {{ .Values.namespace }}
          {{- end }}
      volumes:
        - name: secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secretProviderClass }}
            nodePublishSecretRef:
              name: {{ .Values.secretSPName }}
