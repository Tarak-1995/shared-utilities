# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest


variables:
  - group: acr-variable-group
    parameters:
      helmVersion: 3.2.3
      HELM_EXPERIMENTAL_OCI: 1
      registryServerName: "$(registryName).azurecr.io"
      projectName: sharedutilities
      helmChartVersion: "1.0.0"

resources: 
  pipelines:
  - pipeline: Perseus_SharedUtilities_QA
    source: sharedutilities
    trigger:
      enabled: true
      branches:
        include:
          - Devops/nonprod


stages:
- stage: Staging
  displayName: Staging
  jobs:
  - deployment: Staging
    variables:
      #k8sNamespace: 'staging'
      # define 5 more variables: aks, rg, aksSpId, aksSpSecret and aksSpTenantId in the Azure pipeline UI definition
    displayName: deploy helm chart into AKS
    pool:
      vmImage: ubuntu-latest
    #environment: development-$(projectName)
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: none
          - task: HelmInstaller@1
            displayName: "install helm"
            inputs:
              helmVersionToInstall: $(helmVersion)
          - download: ci-pipeline
            artifact: build-artifact
          - bash: |
              az login \
                  --service-principal \
                  -u $(aksSpId) \
                  -p '$(aksSpSecret)' \
                  --tenant $(aksSpTenantId)
              az aks get-credentials \
                  -n $(aks) \
                  -g $(rg)
              echo $(registryPassword) | helm registry login $(registryServerName) --username $(registryLogin) --password-stdin
              helmChartVersion=$(jq .helmChartVersion $(pipeline.workspace)/ci-pipeline/build-artifact/variables.json -r)
              helm chart pull $(registryServerName)/charts/$(projectName):$helmChartVersion
              helm chart export $(registryServerName)/charts/$(projectName):$helmChartVersion --destination $(pipeline.workspace)/install
              helm upgrade \
                  --namespace staging \
                  --version $helmChartVersion \
                  --set image.repository=$(registryServerName)/sharedutilies_qa\
                  #-f $(pipeline.workspace)/ci-pipeline/build-artifact/deploy/k8s/helm/app.yaml \
                  #-f $(pipeline.workspace)/ci-pipeline/build-artifact/deploy/k8s/helm/inf.yaml \
                  $(projectName) \
                  $(pipeline.workspace)/install/$(projectName)
            failOnStderr: true
            displayName: "deploy helm chart"
